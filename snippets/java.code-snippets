{
    "FRC insert command boilerplate code": {
        "prefix": "frccmd",
        "body": [
			//Message
			"// 5409: The Chargers",
			"// http://github.com/FRC5409\n",

			// Time
			"// Command Created: $CURRENT_DAY_NAME, $CURRENT_MONTH_NAME, $CURRENT_DATE, $CURRENT_YEAR, at $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND\n",

			// Import
			"import edu.wpi.first.wpilibj2.command.CommandBase;\n",

			// Class name
			"/**",
			" * @author ",
			" */"
			"public class $TM_FILENAME_BASE extends CommandBase {\n",

            // Subsystem
            "\tprivate final Subsystem$1 m_subsystem;\n",

			// Constructor
			"\tpublic $TM_FILENAME_BASE(Subsystem$1 subsystem) {",
			"\t\t$3\n",
            "\t\t// Use addRequirements() here to declare subsystem dependencies.",
            "\t\taddRequirements(subsystem);",
			"\t}\n",

			// Command methods

            "\t// Called when the command is initially scheduled.",
			"\t@Override",
            "\tpublic void initialize() {",
			"\t\t$4",
			"\t}\n",

            "\t// Called every time the scheduler runs while the command is scheduled.",
			"\t@Override",
            "\tpublic void execute() {",
			"\t\t$5",
			"\t}\n",

            "\t// Called once the command ends or is interrupted.",
			"\t@Override",
            "\tpublic void end(boolean interrupted) {",
			"\t\t$6",
			"\t}\n",

            "\t// Returns true when the command should end.",
			"\t@Override",
            "\tpublic boolean isFinished() {",
            "\t\treturn false$7;",
			"\t}\n",

			"}"
		]
    },
    "FRC insert Subsystem boilerplate code": {
        "prefix": "frcsys",
        "body": [
			//Message
			"// 5409: The Chargers",
			"// http://github.com/FRC5409\n",

			// Time
			"// Subsytem Created: $CURRENT_DAY_NAME, $CURRENT_MONTH_NAME, $CURRENT_DATE, $CURRENT_YEAR, at $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND\n",
			
			// Import
			"import edu.wpi.first.wpilibj2.command.SubsystemBase;\n",

			// Class name
			"public class $TM_FILENAME_BASE extends SubsystemBase {\n",

			"\tprivate static $TM_FILENAME_BASE instance = null;\n",

			// Constructor
			"\tprivate $TM_FILENAME_BASE() {",
			"\t\t$1",
			"\t}\n",

			// Singleton

			"\t// Get subsystem",
			"\tpublic static $TM_FILENAME_BASE getInstance() {",
			"\t\tif (instance == null) instance = new $TM_FILENAME_BASE();\n",
			"\t\treturn instance;"
			"\t}\n"

			// Subsystem methods

			"\t@Override",
            "\tpublic void periodic() {",
            "\t\t// This method will be called once per scheduler run",
			"\t\t$2",
			"\t}\n",

			"\t@Override",
            "\tpublic void simulationPeriodic() {",
            "\t\t// This method will be called once per scheduler run during simulation",
			"\t\t$3",
			"\t}\n",

			"}"
        ]
    }
}