{
    "FRC insert command boilerplate code": {
        "prefix": "frccmd",
        "body": [
			// Import
			"import edu.wpi.first.wpilibj2.command.CommandBase;\n",

			// Class name
			"public class $TM_FILENAME_BASE extends CommandBase {\n",

            // Subsystem
            "\tprivate final Subsystem$1 m_subsystem;\n",

			// Constructor
			"\tpublic $TM_FILENAME_BASE(Subsystem$1 subsystem) {",
            "\t\t// Use addRequirements() here to declare subsystem dependencies.",
            "\t\taddRequirements(subsystem);",
			"\t\t$2",
			"\t}\n",

			// Command methods

            "\t// Called when the command is initially scheduled.",
			"\t@Override",
            "\tpublic void initialize() {",
			"\t\t$3",
			"\t}\n",

            "\t// Called every time the scheduler runs while the command is scheduled.",
			"\t@Override",
            "\tpublic void execute() {",
			"\t\t$4",
			"\t}\n",

            "\t// Called once the command ends or is interrupted.",
			"\t@Override",
            "\tpublic void end(boolean interrupted) {",
			"\t\t$5",
			"\t}\n",

            "\t// Returns true when the command should end.",
			"\t@Override",
            "\tpublic boolean isFinished() {",
			"\t\t$6",
            "\t\treturn false;",
			"\t}\n",

			"}"
		]
    },
    "FRC insert Subsystem boilerplate code": {
        "prefix": "frcsys",
        "body": [
			// Import
			"import edu.wpi.first.wpilibj2.command.SubsystemBase;\n",

			// Class name
			"public class $TM_FILENAME_BASE extends SubsystemBase {\n",

			// Constructor
			"\tpublic $TM_FILENAME_BASE() {",
			"\t\t$1",
			"\t}\n",

			// Subsystem methods

			"\t@Override",
            "\tpublic void periodic() {",
            "\t\t// This method will be called once per scheduler run",
			"\t\t$2",
			"\t}\n",

			"\t@Override",
            "\tpublic void simulationPeriodic() {",
            "\t\t// This method will be called once per scheduler run during simulation",
			"\t\t$3",
			"\t}\n",

			"}"
        ]
    },
    "FRC declare Xbox Controller": {
        "prefix": "frcdx",
        "body": [
            "// Controller",
            "private final XboxController sys_controller; // = new XboxController(0);",
            "private final JoystickButton btn_main_A, btn_main_B, btn_main_X, btn_main_Y, btn_main_LBumper, btn_main_RBumper,",
            "\tbtn_main_LAnalog, btn_main_RAnalog, btn_main_Back, btn_main_Start;"
        ]
    },
    "FRC instantiate Xbox Controller": {
        "prefix": "frcix",
        "body": [
            "// Controller",
            "sys_controller = new XboxController(0);",
            "btn_main_A = new JoystickButton(sys_controller, XboxController.Button.kA.value);",
            "btn_main_B = new JoystickButton(sys_controller, XboxController.Button.kB.value);",
            "btn_main_X = new JoystickButton(sys_controller, XboxController.Button.kX.value);",
            "btn_main_Y = new JoystickButton(sys_controller, XboxController.Button.kY.value);",
            "btn_main_LBumper = new JoystickButton(sys_controller, XboxController.Button.kLeftBumper.value);",
            "btn_main_RBumper = new JoystickButton(sys_controller, XboxController.Button.kRightBumper.value);",
            "btn_main_LAnalog = new JoystickButton(sys_controller, XboxController.Button.kLeftStick.value);",
            "btn_main_RAnalog = new JoystickButton(sys_controller, XboxController.Button.kRightStick.value);",
            "btn_main_Back = new JoystickButton(sys_controller, XboxController.Button.kBack.value);",
            "btn_main_Start = new JoystickButton(sys_controller, XboxController.Button.kStart.value);"
        ]
    }
}